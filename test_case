Here is a basic test case. Assume that the program at the server side is called 
server, and the program at the client side is called client. PortNumber can be 
hard-coded at the server.

1. start the "server" on one machine, say allv23, it may output a PortNumber
   start one client on the same machine as the server
   start another client on another machine, say allv25
   (clients execute "client ServerName PortNumber" to start)

2. At client 1, type the following commands:
   login Viresh # login with user id Viresh
   help         # display all commands with a brief description and syntax of each


   ag 5         # list all existing groups, 5 at a time. Some may be subscribed
   s 1          # subscribe to an unsubscribed group, say #1 in the current list (page 1)
   n            # show next five groups (page 2). Initially must have 15-20 groups
   s 2 3        # subscribe to two unsubscribed groups in page 2
   q            # exit from ag command


   sg 5         # list all subscribed groups, 5 at a time. Three shown, maybe more
   u 2          # unsubscribe from the 2nd group in the current page
   n            # list next 5 groups if there are any. Pick a group, say comp.lang.c
   q            # exit from sg command


   rg comp.lang.c 5 # reading the post titles in comp.lang.c, 5 posts at a time
                # unread posts first, read ones after. Not reverse chronological is fine

   4            # display the 1st page content of the 4th post in the current post list
   n(*)         # display the content of this selected post until the end of post
 		# (*) is not part of a command. It only means press n multiple times 
   q            # exit from reading the post. The post list before '4' is shown

   r 1-2        # mark the first two posts in this page as read
   n            # show the titles of the next 5 posts

   p            # make a post to this group. Prompted for post subject line
   (subject)    # enter post subject line. Prompted for post content
   (content)    # enter post content. It should have at least two paragraphs
   .            # enter a dot by itself on a line at the same time as Aich
                # show post list, two new posts  shown on top as unread

                # interact with server, say, by press n, to see Aich's 2nd new post

   q            # Exit from rg command

   logout	# logout from the application

3. While client 1 is running, at client 2,
   login Aich

   ag           # shows all discussion groups available, one page at a time
   s 3          # subscribe to the 6th group in the current page of groups
   s 5          # subscribe to the 8th group in the current page of groups
   u 2          # unsubscribe a group in the current page of groups
   q            # exit from ag

   rg comp.lang.c # start to read the group comp.lang.c
   p            # post to the same group, at the same time as Viresh.
                # See if both can see two new posts after
   p            # make another new post, see if the new post can be seen
                # by way of an alert at Viresh
   q		# exit from rg

   logout

   login Viresh # see if all Viresh's state is kept, subscribed groups, posts
   ag 5         # list all groups
   q
   sg 5         # list all subscribed groups
   q
   rg comp.lang.c # read the group rg comp.lang.c
   3            # read the new post by Viresh on top
   q
   logout



For the bonus part:
- start one server
- start another server
- let them have an overlapped group
- post to that group on one server, see a user on another server can see the new post
- interact with each server in the same way as the single-server case above
